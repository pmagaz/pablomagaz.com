name: Build, Deploy, and Connect with WireGuard

on:
  push:
    branches: [main]

jobs:
  build-deploy-connect:
    name: Deploy and Setup WireGuard
    runs-on: ubuntu-latest
    environment: production

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Install WireGuard
        run: sudo apt-get update && sudo apt-get install -y wireguard

      - name: Setup WireGuard
        env:
          WIREGUARD_CONFIG: ${{ secrets.WIREGUARD_CONFIG }}
        run: |
          echo "Creating WireGuard configuration..."
          echo "$WIREGUARD_CONFIG" | sudo tee /etc/wireguard/wg0.conf > /dev/null
          
          sudo chmod 600 /etc/wireguard/wg0.conf
          
          echo "WireGuard configuration (redacted):"
          sudo sed 's/\(PrivateKey\s*=\s*\).*$/\1[REDACTED]/' /etc/wireguard/wg0.conf
          
          echo "Setting up WireGuard interface..."
          sudo ip link add dev wg0 type wireguard
          sudo wg setconf wg0 /etc/wireguard/wg0.conf
          
          echo "Setting interface address..."
          WIREGUARD_ADDRESS=$(grep Address /etc/wireguard/wg0.conf | cut -d '=' -f2 | tr -d ' ')
          sudo ip address add dev wg0 $WIREGUARD_ADDRESS
          
          echo "Bringing up WireGuard interface..."
          sudo ip link set up dev wg0
          
          echo "WireGuard interface status:"
          sudo wg show

      - name: Test WireGuard Connection
        run: |
          echo "Attempting to ping server..."
          SERVER_IP=$(grep Endpoint /etc/wireguard/wg0.conf | cut -d '=' -f2 | cut -d ':' -f1 | tr -d ' ')
          ping -c 4 $SERVER_IP || echo "Ping failed, but continuing..."
          
          echo "Curl test to server..."
          curl -v --connect-timeout 10 http://$SERVER_IP || echo "Curl failed, but continuing..."
          
          echo "Network route:"
          ip route
          
          echo "WireGuard status:"
          sudo wg show
      # - name: Configure Dockerregistry
      #   run: |
      #     echo '{ "insecure-registries" : ["${{ secrets.REGISTRY_HOST }}:${{ secrets.REGISTRY_PORT }}"] }' | sudo tee /etc/docker/daemon.json
      #     sudo systemctl restart docker

      # - name: Build Docker image
      #   run: |
      #     docker build -t 172.104.202.186:30000/contact-form:latest .
      #     #docker build -t ${{ secrets.REGISTRY_HOST }}:${{ secrets.REGISTRY_PORT }}/contact-form:latest .

      # - name: Push Docker image
      #   run: |
      #     docker push 172.104.202.186:30000/contact-form:latest
      #     #docker push ${{ secrets.REGISTRY_HOST }}:${{ secrets.REGISTRY_PORT }}/contact-form:latest
      
      # - name: Cleanup WireGuard
      #   if: always()
      #   run: sudo wg-quick down wg0