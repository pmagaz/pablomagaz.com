name: Build and Deploy
on:
  push:
    branches: [main]
jobs:
  build-and-deploy:
    name: Deploy Static Site and Docker Container
    runs-on: ubuntu-latest
    environment: production  # Define an environment
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      # - name: Install Node.js
      #   uses: actions/setup-node@v1
      #   with:
      #     node-version: "18.x"

      # - name: Install Project Dependencies
      #   run: npm ci

      # - name: Install Gatsby CLI
      #   run: npm install -g gatsby-cli@5.13.2

      # - name: Build
      #   run: npm run build

      # - name: Copy assets content into public
      #   run: cp -Rf src/assets public

      # - name: Copy index content into public
      #   run: cp src/index.html public

      # - name: Verify build
      #   run: ls -la public

      # - name: Upload artifact
      #   uses: actions/upload-artifact@v4
      #   with:
      #     name: site
      #     path: public

      # - name: Install Dependencies 
      #   run: |
      #     sudo apt-get update
      #     sudo apt-get install -y wireguard resolvconf iputils-ping traceroute

      - name: Setup WireGuard 
        run: |
              sudo apt install resolvconf
              sudo apt install wireguard
              echo "${{ secrets.WIREGUARD_CONFIG }}" > wg0.conf
              sudo chmod 600 wg0.conf
              echo "setting config"
              sudo wg-quick up ./wg0.conf
        shell: bash
          
      # - name: Set up WireGuard Connection
      #   uses: niklaskeerl/easy-wireguard-action@v2
      #   with:
      #     WG_CONFIG_FILE: ${{ secrets.WIREGUARD_CONFIG }}

      - name: Configure Dockerregistry
        run: |
          echo '{ "insecure-registries" : ["${{ secrets.REGISTRY_HOST }}:30000"] }' | sudo tee /etc/docker/daemon.json
          sudo systemctl restart docker

      - name: Build Docker image
        run: |
          docker build -t ${{ secrets.REGISTRY_HOST }}:30000/contact-form:latest .

      - name: Push Docker image
        run: |
          docker push ${{ secrets.REGISTRY_HOST }}:30000/contact-form:latest
      
      - name: Cleanup WireGuard
        if: always()
        run: sudo wg-quick down wg0