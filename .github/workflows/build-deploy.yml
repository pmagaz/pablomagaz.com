name: Build and Deploy
on:
  push:
    branches: [main]
jobs:
  build-and-deploy:
    name: Deploy Static Site and Docker Container
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v2.3.1

      - name: Install Node.js
        uses: actions/setup-node@v1
        with:
          node-version: "18.x"

      - name: Install Project Dependencies
        run: npm ci

      - name: Install Gatsby CLI
        run: npm install -g gatsby-cli@5.13.2

      - name: Build
        run: npm run build

      - name: Copy assets content into public
        run: cp -Rf src/assets public

      - name: Copy index content into public
        run: cp src/index.html public

      - name: Verify build
        run: ls -la public

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: site
          path: public

      - name: Install WireGuard
        run: |
          sudo apt-get update
          sudo apt-get install -y wireguard resolvconf

      - name: Setup WireGuard
        env:
          WIREGUARD_PRIVATE_KEY: ${{ secrets.WIREGUARD_PRIVATE_KEY }}
          WIREGUARD_CONFIG: ${{ secrets.WIREGUARD_CONFIG }}
        run: |
          echo "$WIREGUARD_CONFIG" | sudo tee /etc/wireguard/wg0.conf > /dev/null
          sudo chmod 600 /etc/wireguard/wg0.conf
          sudo wg-quick up wg0

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Build and push Docker image
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: ${{ secrets.REGISTRY_HOST }}:30000/contact-form:latest

      - name: Cleanup WireGuard
        if: always()
        run: sudo wg-quick down wg0