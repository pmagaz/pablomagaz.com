name: Build and Deploy
on:
  push:
    branches: [main]
jobs:
  build-and-deploy:
    name: Deploy Static Site and Docker Container
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v2.3.1

      # - name: Install Node.js
      #   uses: actions/setup-node@v1
      #   with:
      #     node-version: "18.x"

      # - name: Install Project Dependencies
      #   run: npm ci

      # - name: Install Gatsby CLI
      #   run: npm install -g gatsby-cli@5.13.2

      # - name: Build
      #   run: npm run build

      # - name: Copy assets content into public
      #   run: cp -Rf src/assets public

      # - name: Copy index content into public
      #   run: cp src/index.html public

      # - name: Verify build
      #   run: ls -la public

      # - name: Upload artifact
      #   uses: actions/upload-artifact@v4
      #   with:
      #     name: site
      #     path: public

      # - name: Install Dependencies 
      #   run: |
      #     sudo apt-get update
      #     sudo apt-get install -y wireguard resolvconf traceroute

      - name: Setup and Verify WireGuard
        env:
          WIREGUARD_CONFIG: ${{ secrets.WIREGUARD_CONFIG }}
        run: |
          DEBIAN_FRONTEND=noninteractive sudo apt-get -qq update 
          DEBIAN_FRONTEND=noninteractive sudo apt-get -yqq install wireguard

          sudo mkdir -p /etc/wireguard
          echo "$WIREGUARD_CONFIG" | sed '/^DNS/d' > github.conf
          sudo mv github.conf /etc/wireguard/
          
          # Disable automatic DNS configuration in wg-quick
          sudo sed -i 's/^DNS/#DNS/' /etc/wireguard/github.conf

          sudo wg-quick up github || exit 1

          echo "WireGuard interface status:"
          sudo wg show github

          echo "Current network interfaces:"
          ip addr show

          echo "Current routing table:"
          ip route

          echo "WireGuard setup completed." 
   
      - name: Build Docker image
        run: |
          docker build -t ${{ secrets.REGISTRY_HOST }}:30000/contact-form:latest .

      - name: Push Docker image
        run: |
          docker push --insecure-registry ${{ secrets.REGISTRY_HOST }}:30000/contact-form:latest
      
      - name: Cleanup WireGuard
        if: always()
        run: sudo wg-quick down wg0