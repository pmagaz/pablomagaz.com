name: Build and Deploy
on:
  push:
    branches: [main]
jobs:
  build-and-deploy:
    name: Deploy Static Site and Docker Container
    runs-on: ubuntu-latest
    environment: production  # Define an environment
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      # - name: Install Node.js
      #   uses: actions/setup-node@v1
      #   with:
      #     node-version: "18.x"

      # - name: Install Project Dependencies
      #   run: npm ci

      # - name: Install Gatsby CLI
      #   run: npm install -g gatsby-cli@5.13.2

      # - name: Build
      #   run: npm run build

      # - name: Copy assets content into public
      #   run: cp -Rf src/assets public

      # - name: Copy index content into public
      #   run: cp src/index.html public

      # - name: Verify build
      #   run: ls -la public

      # - name: Upload artifact
      #   uses: actions/upload-artifact@v4
      #   with:
      #     name: site
      #     path: public

      # - name: Install Dependencies 
      #   run: |
      #     sudo apt-get update
      #     sudo apt-get install -y wireguard resolvconf iputils-ping traceroute

      - name: Setup WireGuard 
        run: |
              sudo apt install resolvconf
              sudo apt install wireguard
              echo "${{ secrets.WIREGUARD_CONFIG }}" > wg0.conf
              sudo chmod 600 wg0.conf
              echo "setting config"
              sudo wg-quick up ./wg0.conf
        shell: bash

      # - name: Setup WireGuard
      #   env:
      #     WIREGUARD_PRIVATE_KEY: ${{ secrets.WIREGUARD_PRIVATE_KEY }}
      #     WIREGUARD_ENDPOINT: ${{ secrets.WIREGUARD_ENDPOINT }}
      #     WIREGUARD_PUBLIC_KEY: ${{ secrets.WIREGUARD_PUBLIC_KEY }}
      #     WIREGUARD_IPS: ${{ secrets.WIREGUARD_IPS }}
      #     WIREGUARD_ALLOWED_IPS: ${{ secrets.WIREGUARD_ALLOWED_IPS }}
      #   run: |
      #     sudo apt install wireguard
      #     echo "$WIREGUARD_PRIVATE_KEY" > privatekey
      #     sudo ip link add dev wg0 type wireguard
      #     sudo ip address add dev wg0 $WIREGUARD_IPS
      #     sudo wg set wg0 listen-port 51820 private-key privatekey \
      #       peer $WIREGUARD_PUBLIC_KEY \
      #       allowed-ips $WIREGUARD_ALLOWED_IPS \
      #       endpoint $WIREGUARD_ENDPOINT
      #     sudo ip link set up dev wg0


      - name: Configure Dockerregistry
        run: |
          echo '{ "insecure-registries" : ["${{ secrets.REGISTRY_HOST }}:${{ secrets.REGISTRY_PORT }}"] }' | sudo tee /etc/docker/daemon.json
          sudo systemctl restart docker

      - name: Build Docker image
        run: |
          docker build -t 172.104.202.186:30000/contact-form:latest .
          #docker build -t ${{ secrets.REGISTRY_HOST }}:${{ secrets.REGISTRY_PORT }}/contact-form:latest .

      - name: Push Docker image
        run: |
          docker push 172.104.202.186:30000/contact-form:latest
          #docker push ${{ secrets.REGISTRY_HOST }}:${{ secrets.REGISTRY_PORT }}/contact-form:latest
      
      - name: Cleanup WireGuard
        if: always()
        run: sudo wg-quick down wg0